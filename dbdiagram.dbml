Table users {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  first_name VARCHAR(30)
  last_name VARCHAR(50)
  phone VARCHAR(25)
  email VARCHAR(100) // UNIQUE
  password_hash VARCHAR(150)
  password_salt VARCHAR(150)
  location_id INTEGER [ref: > locations.id]
  
  Indexes {
    (email)[UNIQUE]
  }
}

Table products {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  name VARCHAR(50)
  url VARCHAR(200)
  description VARCHAR(240)
  price DOUBLE // CHECK(price > 0)
  alcohol DOUBLE // percentages
  capacity DOUBLE // liters
  manufacturer VARCHAR(70)
  country_of_manufacturer VARCHAR(50)
  categorie_id INTEGER [ref: > categories.id]
  sub_categorie_id INTEGER [ref: > sub_categories.id]
}

Table categories {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  name VARCHAR(30)
  description VARCHAR(240)
}

Table sub_categories {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  name VARCHAR(30)
  description VARCHAR(240)
  categorie_id INTEGER [ref: > categories.id]
}


Table orders {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  paid BOOLEAN
  delivery_status ENUM // processing, cancelled, shipped, delivered, returnede
  user_id INTEGER [ref: > users.id]
  employee_id INTEGER [ref: > employees.id]
}

Table orders_products {
  id SERIAL [pk, increment]
  product_id INTEGER [ref: > products.id]
  order_id INTEGER [ref: > orders.id]
}

Table ratings {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  stars INTEGER // CHECK(stars >= 1 AND stars <= 5)
  description VARCHAR(240)
  user_id INTEGER [ref: > users.id]
  product_id INTEGER [ref: > products.id]
}

Table favorites {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  user_id INTEGER [ref: > users.id]
  product_id INTEGER [ref: > products.id]
}

Table campaigns {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  name VARCHAR(40)
  description VARCHAR(240)
  url_image VARCHAR(200)
  starts_at TIMESTAMP
  ends_at TIMESTAMP
  discount_percentage INTEGER // CHECK(discount_percentage > 0 AND discount_percentage < 100)
}

Table products_campaigns {
  id SERIAL [pk, increment]
  campaign_id INTEGER [ref: > campaigns.id]
  product_id INTEGER [ref: > products.id]
}

Table employees {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  first_name VARCHAR(30)
  last_name VARCHAR(50)
  phone VARCHAR(25)
  email VARCHAR(100) // UNIQUE
  password_hash VARCHAR(150)
  password_salt VARCHAR(150)
  address VARCHAR(85)
  role ENUM // no longer working, employee, admin
}

Table storages {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  address VARHCAR(85)
}

Table products_in_storages {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  product_id INTEGER [ref: > products.id]
  storage_id INTEGER [ref: > storages.id]
}

Table storages_employees {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  employee_id INTEGER [ref: > employees.id]
  storage_id INTEGER [ref: > storages.id]
}

Table coupon_codes {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  code VARCHAR(40)
  description VARCHAR(240)
  discount_percentage INTEGER
  expiry_date TIMESTAMP
}

Table used_coupon_codes {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  coupon_code_id INTEGER [ref: > coupon_codes.id]
  user_id INTEGER [ref: > users.id]
}

Table sessions {
  sid VARCHAR [pk]
  sess JSON
  expire TIMESTAMP
}

TABLE baskets {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  session_sid VARCHAR [ref: > sessions.sid]
  product_id INTEGER [ref: > products.id]
}

Table locations {
  id SERIAL [pk, increment]
  created_at TIMESTAMP
  updated_at TIMESTAMP
  country VARCHAR(100)
  city VARCHAR(100)
  postal_code INTEGER
  address VARCHAR(200)
}